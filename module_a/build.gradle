if (isModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
//
//apply plugin: 'org.greenrobot.greendao'  //for greenDao
//apply plugin: 'io.objectbox' // after applying Android plugin

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //支持VectorDrawable
        vectorDrawables.useSupportLibrary = true

        //配置使用ARouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

    }


    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/libs']

            if (isModule.toBoolean()) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //集成开发模式下排除debug文件夹中的所有Java文件
                java {
                    exclude 'debug/**'
                }
            }
        }
    }


    buildTypes {
        release {
            minifyEnabled false    //proguard
//            zipAlignEnabled true  // Zipalign优化
//            shrinkResources true  // 移除无用的resource文件,必须和minifyEnabled 一起使用
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            debuggable false
//            signingConfig signingConfigs.MyConfig

            manifestPlaceholders = [IS_DEBUG          : "no", APP_ICON: "@mipmap/ic_launcher", APP_NAME: "FrameWork",
                                    RONG_CLOUD_APP_KEY: "6tnym1br6jw07"]
        }

        debug {
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            manifestPlaceholders = [IS_DEBUG          : "yes", APP_ICON: "@mipmap/ic_launcher", APP_NAME: "FrameWork",
                                    RONG_CLOUD_APP_KEY: "c9kqb3rdcvn1j"]
        }

    }


//    greendao {
//        schemaVersion 7                  //修改这里的版本号，greenDAO会自动修改生成到DAOMaster中的版本号
//        targetGenDir 'src/main/java'     //表示greenDAO生成的DAOMaster和DaoSession的位置
//        daoPackage 'com.zenglb.framework.persistence.dbmaster' //我觉得最好放在Entity 下面的目录！！！
//    }

    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibility
        targetCompatibility rootProject.ext.targetCompatibility
    }

}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4' //
    implementation project(':baselib')
//    implementation project(':jsbridge')

    //ARouter
//    implementation 'com.alibaba:arouter-api:1.3.1'

    implementation 'com.github.bumptech.glide:glide:4.6.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'

//    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
//    implementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"
//    implementation "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
//    implementation "com.android.support:support-annotations:$rootProject.ext.supportLibraryVersion"
//    implementation "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"

//    //dagger & dagger.android
//    implementation "com.google.dagger:dagger-android:$rootProject.ext.daggerVersion"
//    implementation "com.google.dagger:dagger-android-support:$rootProject.ext.daggerVersion"
    // if you use the support libraries
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.ext.daggerVersion"

//    //butter knife,不要使用了！！！
//    implementation 'com.jakewharton:butterknife:8.8.1'
//    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'



    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'     //Platform bindings
    implementation 'com.jakewharton.rxbinding2:rxbinding-support-v4:2.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.0.0'

//    //For Lifecycle, LiveData, and ViewModel
//    implementation "android.arch.lifecycle:runtime:1.1.1"
    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"
//    implementation "android.arch.lifecycle:extensions:1.1.1"

//    implementation 'com.github.florent37:singledateandtimepicker:1.2.2'    //高仿IOS 时间选择
//    implementation 'de.hdodenhof:circleimageview:2.2.0'                    //CircleImageView
//    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
//    implementation 'com.liaoinstan.springview:library:1.3.2'   //refresh and load more data,准备删除
//    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30' //大大的减少代码量
//
//    implementation 'jp.wasabeef:recyclerview-animators:2.2.4'       //RecyclerView animal
//    implementation 'com.yqritc:recyclerview-flexibledivider:1.4.0'
//    debugImplementation 'com.facebook.stetho:stetho:1.4.2'
//    implementation 'pub.devrel:easypermissions:1.1.3'        //没有其他的原因，其他的目前多少有BUG 啊

    //robolectric
    testImplementation "org.robolectric:robolectric:3.5.1"

    // Dependencies for local unit tests
    testImplementation 'junit:junit:4.12'
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"

    // Android Testing Support Library's runner and rules
    androidTestImplementation "com.android.support.test:runner:$rootProject.ext.runnerVersion"
    androidTestImplementation "com.android.support.test:rules:$rootProject.ext.rulesVersion"

    androidTestImplementation "android.arch.persistence.room:testing:$rootProject.roomVersion"

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    androidTestImplementation "com.google.dexmaker:dexmaker:$rootProject.ext.dexmakerVersion"
    androidTestImplementation "com.google.dexmaker:dexmaker-mockito:$rootProject.ext.dexmakerVersion"

    // Espresso UI Testing
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso.idling:idling-concurrent:$rootProject.espressoVersion"
    implementation "com.android.support.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"

    // Resolve conflicts between main and test APK:
    androidTestImplementation "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    androidTestImplementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    androidTestImplementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    androidTestImplementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    androidTestImplementation "com.android.support:design:$rootProject.supportLibraryVersion"
}
